    - file: path=/opt/tmp state=directory

    - command: uname -r
      register: KERNEL_RELEASE

    - name: obtain the BLCR code
      get_url: url=http://crd.lbl.gov/assets/Uploads/FTG/Projects/CheckpointRestart/downloads/blcr-0.8.5.tar.gz dest=/opt/tmp/blcr-0.8.5.tar.gz
      when: KERNEL_RELEASE.stdout | version_compare('3.7.1', '<=')
    - shell: tar zxf blcr-0.8.5.tar.gz; mv /opt/tmp/blcr-0.8.5 /opt/tmp/blcr chdir=/opt/tmp creates=/opt/tmp/blcr
      when: KERNEL_RELEASE.stdout | version_compare('3.7.1', '<=')
    - get_url: url=https://upc-bugs.lbl.gov/blcr-dist/blcr-0.8.6_b4.tar.gz dest=/opt/tmp/blcr-0.8.6_b4.tar.gz
      when: KERNEL_RELEASE.stdout | version_compare('3.7.1', '>')
    - shell: tar zxf blcr-0.8.6_b4.tar.gz; mv /opt/tmp/blcr-0.8.6_b4 /opt/tmp/blcr chdir=/opt/tmp creates=/opt/tmp/blcr
      when: KERNEL_RELEASE.stdout | version_compare('3.7.1', '>')

    - name: create a folder where compile the code of BLCR
      file: path=/opt/tmp/blcr/builddir state=directory

    - name: install all dependences of BLCR in Deb systems
      apt: name=make,gcc,linux-headers-{{KERNEL_RELEASE.stdout}} update_cache=yes cache_valid_time=3600
      when: ansible_os_family == "Debian"
   
    - name: install all dependences of BLCR in RedHat systems
      yum: pkg=make,gcc,linux-headers-{{KERNEL_RELEASE.stdout}} update_cache=yes
      when: ansible_os_family == "RedHat"

    - name: configure blcr
      shell: ../configure chdir=/opt/tmp/blcr/builddir creates=/opt/tmp/blcr/builddir/config.log

    - name: compile (make) BLCR
      command: make chdir=/opt/tmp/blcr/builddir creates=/opt/tmp/blcr/builddir/bin

    - name: install BLCR
      command: make install chdir=/opt/tmp/blcr/builddir creates=/usr/local/lib/blcr/{{KERNEL_RELEASE.stdout}}/blcr.ko

    - name: load kernel modules
      shell: grep -q "\<blcr\>" /proc/modules || make insmod chdir=/opt/tmp/blcr/builddir

    - name: updating ld.so.cache
      command: ldconfig

    - name: configure environment variables
      copy:
        dest: /etc/profile.d/blcr.sh
        content: |
            export PATH="$PATH:/usr/local/bin"
            export MANPATH="$MANPATH:/usr/local/man"
            export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/lib:/usr/local/lib64"

    - name: Include awscli if necessary
      include: "awscli.yml"
      when: blcr_install_awscli == "yes"

    - name: Include ckptman if necessary
      include: "ckptman.yaml"
      when: blcr_install_ckptman == "yes"
